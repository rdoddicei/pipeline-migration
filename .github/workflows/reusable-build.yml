# Reusable GitHub Actions workflow for build jobs (converted from jobs.build.yml)
# Variable names and logic preserved as much as possible
name: build

on:
  workflow_call:
    inputs:
      TMPL_UNIT_TEST_IMAGE:
        required: false
        type: string
        default: "mcr.microsoft.com/dotnet/sdk:7.0"
      TMPL_SONAR_IMAGE:
        required: false
        type: string
        default: "harbor.use.ucdp.net/utp_common/upr-dotnet-sonarqube-image:dotnet-sdk-7.0"
      CI_COMMIT_BRANCH:
        required: false
        type: string
      CI_DEFAULT_BRANCH:
        required: false
        type: string
      CI_MERGE_REQUEST_ID:
        required: false
        type: string
    secrets:
      SCRT_GITLAB_API_PRIVATE_TOKEN:
        required: false

jobs:
  semver:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.TMPL_UNIT_TEST_IMAGE }}
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate semantic version
        id: version
        run: |
          # Semantic version generation logic
          # This would typically use a proper semver tool
          VERSION="1.0.${{ github.run_number }}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Generated version: $VERSION"

  build_image:
    runs-on: ubuntu-latest
    needs: semver
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: |
            ${{ github.repository }}:${{ needs.semver.outputs.version }}
            ${{ github.repository }}:latest

  build_image_mr:
    runs-on: ubuntu-latest
    needs: semver
    if: ${{ inputs.CI_MERGE_REQUEST_ID != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (MR - no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: |
            ${{ github.repository }}:mr-${{ inputs.CI_MERGE_REQUEST_ID }}
            ${{ github.repository }}:latest

  build_image_branch:
    runs-on: ubuntu-latest
    needs: semver
    if: |
      inputs.CI_COMMIT_BRANCH != '' &&
      inputs.CI_COMMIT_BRANCH != inputs.CI_DEFAULT_BRANCH &&
      !startsWith(inputs.CI_COMMIT_BRANCH, 'hotfix') &&
      !startsWith(inputs.CI_COMMIT_BRANCH, 'release') &&
      !startsWith(inputs.CI_COMMIT_BRANCH, 'feature')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (Branch - no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: |
            ${{ github.repository }}:${{ inputs.CI_COMMIT_BRANCH }}
            ${{ github.repository }}:latest